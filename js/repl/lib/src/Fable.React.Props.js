import { Record, declare, Union } from "../../fable-library/Types.js";
import { array, float64, int32, bool, obj, record, option, lambda, unit, type, union, string } from "../../fable-library/Reflection.js";
import { createObj } from "../../fable-library/Util.js";
export const FragmentProp = declare(function Fable_React_Props_FragmentProp(tag, name, ...fields) {
  Union.call(this, tag, name, ...fields);
}, Union);
export function FragmentProp$reflection() {
  return union("Fable.React.Props.FragmentProp", [], FragmentProp, () => [["Key", [string]]]);
}
export const Prop = declare(function Fable_React_Props_Prop(tag, name, ...fields) {
  Union.call(this, tag, name, ...fields);
}, Union);
export function Prop$reflection() {
  return union("Fable.React.Props.Prop", [], Prop, () => [["Key", [string]], ["Ref", [lambda(type("Browser.Types.Element"), unit)]], ["ref", [type("Fable.React.IRefValue`1", [option(type("Browser.Types.Element"))])]], ["ref", [type("Fable.React.IRefValue`1", [option(type("Browser.Types.Element"))])]]]);
}
export const DangerousHtml = declare(function Fable_React_Props_DangerousHtml(arg1) {
  this.__html = arg1;
}, Record);
export function DangerousHtml$reflection() {
  return record("Fable.React.Props.DangerousHtml", [], DangerousHtml, () => [["__html", string]]);
}
export const DOMAttr = declare(function Fable_React_Props_DOMAttr(tag, name, ...fields) {
  Union.call(this, tag, name, ...fields);
}, Union);
export function DOMAttr$reflection() {
  return union("Fable.React.Props.DOMAttr", [], DOMAttr, () => [["DangerouslySetInnerHTML", [DangerousHtml$reflection()]], ["OnCut", [lambda(type("Browser.Types.ClipboardEvent"), unit)]], ["OnPaste", [lambda(type("Browser.Types.ClipboardEvent"), unit)]], ["OnCompositionEnd", [lambda(type("Browser.Types.CompositionEvent"), unit)]], ["OnCompositionStart", [lambda(type("Browser.Types.CompositionEvent"), unit)]], ["OnCopy", [lambda(type("Browser.Types.ClipboardEvent"), unit)]], ["OnCompositionUpdate", [lambda(type("Browser.Types.CompositionEvent"), unit)]], ["OnFocus", [lambda(type("Browser.Types.FocusEvent"), unit)]], ["OnBlur", [lambda(type("Browser.Types.FocusEvent"), unit)]], ["OnChange", [lambda(type("Browser.Types.Event"), unit)]], ["OnInput", [lambda(type("Browser.Types.Event"), unit)]], ["OnSubmit", [lambda(type("Browser.Types.Event"), unit)]], ["OnReset", [lambda(type("Browser.Types.Event"), unit)]], ["OnLoad", [lambda(type("Browser.Types.Event"), unit)]], ["OnError", [lambda(type("Browser.Types.Event"), unit)]], ["OnKeyDown", [lambda(type("Browser.Types.KeyboardEvent"), unit)]], ["OnKeyPress", [lambda(type("Browser.Types.KeyboardEvent"), unit)]], ["OnKeyUp", [lambda(type("Browser.Types.KeyboardEvent"), unit)]], ["OnAbort", [lambda(type("Browser.Types.Event"), unit)]], ["OnCanPlay", [lambda(type("Browser.Types.Event"), unit)]], ["OnCanPlayThrough", [lambda(type("Browser.Types.Event"), unit)]], ["OnDurationChange", [lambda(type("Browser.Types.Event"), unit)]], ["OnEmptied", [lambda(type("Browser.Types.Event"), unit)]], ["OnEncrypted", [lambda(type("Browser.Types.Event"), unit)]], ["OnEnded", [lambda(type("Browser.Types.Event"), unit)]], ["OnLoadedData", [lambda(type("Browser.Types.Event"), unit)]], ["OnLoadedMetadata", [lambda(type("Browser.Types.Event"), unit)]], ["OnLoadStart", [lambda(type("Browser.Types.Event"), unit)]], ["OnPause", [lambda(type("Browser.Types.Event"), unit)]], ["OnPlay", [lambda(type("Browser.Types.Event"), unit)]], ["OnPlaying", [lambda(type("Browser.Types.Event"), unit)]], ["OnProgress", [lambda(type("Browser.Types.Event"), unit)]], ["OnRateChange", [lambda(type("Browser.Types.Event"), unit)]], ["OnSeeked", [lambda(type("Browser.Types.Event"), unit)]], ["OnSeeking", [lambda(type("Browser.Types.Event"), unit)]], ["OnStalled", [lambda(type("Browser.Types.Event"), unit)]], ["OnSuspend", [lambda(type("Browser.Types.Event"), unit)]], ["OnTimeUpdate", [lambda(type("Browser.Types.Event"), unit)]], ["OnVolumeChange", [lambda(type("Browser.Types.Event"), unit)]], ["OnWaiting", [lambda(type("Browser.Types.Event"), unit)]], ["OnClick", [lambda(type("Browser.Types.MouseEvent"), unit)]], ["OnContextMenu", [lambda(type("Browser.Types.MouseEvent"), unit)]], ["OnDoubleClick", [lambda(type("Browser.Types.MouseEvent"), unit)]], ["OnDrag", [lambda(type("Browser.Types.DragEvent"), unit)]], ["OnDragEnd", [lambda(type("Browser.Types.DragEvent"), unit)]], ["OnDragEnter", [lambda(type("Browser.Types.DragEvent"), unit)]], ["OnDragExit", [lambda(type("Browser.Types.DragEvent"), unit)]], ["OnDragLeave", [lambda(type("Browser.Types.DragEvent"), unit)]], ["OnDragOver", [lambda(type("Browser.Types.DragEvent"), unit)]], ["OnDragStart", [lambda(type("Browser.Types.DragEvent"), unit)]], ["OnDrop", [lambda(type("Browser.Types.DragEvent"), unit)]], ["OnMouseDown", [lambda(type("Browser.Types.MouseEvent"), unit)]], ["OnMouseEnter", [lambda(type("Browser.Types.MouseEvent"), unit)]], ["OnMouseLeave", [lambda(type("Browser.Types.MouseEvent"), unit)]], ["OnMouseMove", [lambda(type("Browser.Types.MouseEvent"), unit)]], ["OnMouseOut", [lambda(type("Browser.Types.MouseEvent"), unit)]], ["OnMouseOver", [lambda(type("Browser.Types.MouseEvent"), unit)]], ["OnMouseUp", [lambda(type("Browser.Types.MouseEvent"), unit)]], ["OnSelect", [lambda(type("Browser.Types.Event"), unit)]], ["OnTouchCancel", [lambda(type("Browser.Types.TouchEvent"), unit)]], ["OnTouchEnd", [lambda(type("Browser.Types.TouchEvent"), unit)]], ["OnTouchMove", [lambda(type("Browser.Types.TouchEvent"), unit)]], ["OnTouchStart", [lambda(type("Browser.Types.TouchEvent"), unit)]], ["OnScroll", [lambda(type("Browser.Types.UIEvent"), unit)]], ["OnWheel", [lambda(type("Browser.Types.WheelEvent"), unit)]], ["OnAnimationStart", [lambda(type("Browser.Types.AnimationEvent"), unit)]], ["OnAnimationEnd", [lambda(type("Browser.Types.AnimationEvent"), unit)]], ["OnAnimationIteration", [lambda(type("Browser.Types.AnimationEvent"), unit)]], ["OnTransitionEnd", [lambda(type("Browser.Types.TransitionEvent"), unit)]]]);
}
export const SVGAttr = declare(function Fable_React_Props_SVGAttr(tag, name, ...fields) {
  Union.call(this, tag, name, ...fields);
}, Union);
export function SVGAttr$reflection() {
  return union("Fable.React.Props.SVGAttr", [], SVGAttr, () => [["ClipPath", [string]], ["Cx", [obj]], ["Cy", [obj]], ["D", [string]], ["Dx", [obj]], ["Dy", [obj]], ["Fill", [string]], ["FillOpacity", [obj]], ["FontFamily", [string]], ["FontSize", [obj]], ["Fx", [obj]], ["Fy", [obj]], ["GradientTransform", [string]], ["GradientUnits", [string]], ["Height", [obj]], ["MarkerEnd", [string]], ["MarkerMid", [string]], ["MarkerStart", [string]], ["Offset", [obj]], ["Opacity", [obj]], ["PatternContentUnits", [string]], ["PatternUnits", [string]], ["Points", [string]], ["PreserveAspectRatio", [string]], ["R", [obj]], ["Rx", [obj]], ["Ry", [obj]], ["SpreadMethod", [string]], ["StopColor", [string]], ["StopOpacity", [obj]], ["Stroke", [string]], ["StrokeDasharray", [string]], ["StrokeLinecap", [string]], ["StrokeMiterlimit", [string]], ["StrokeOpacity", [obj]], ["StrokeWidth", [obj]], ["TextAnchor", [string]], ["Transform", [string]], ["Version", [string]], ["ViewBox", [string]], ["Width", [obj]], ["X1", [obj]], ["X2", [obj]], ["X", [obj]], ["XlinkActuate", [string]], ["XlinkArcrole", [string]], ["XlinkHref", [string]], ["XlinkRole", [string]], ["XlinkShow", [string]], ["XlinkTitle", [string]], ["XlinkType", [string]], ["XmlBase", [string]], ["XmlLang", [string]], ["XmlSpace", [string]], ["Y1", [obj]], ["Y2", [obj]], ["Y", [obj]], ["Custom", [string, obj]]]);
}
export const HTMLAttr = declare(function Fable_React_Props_HTMLAttr(tag, name, ...fields) {
  Union.call(this, tag, name, ...fields);
}, Union);
export function HTMLAttr$reflection() {
  return union("Fable.React.Props.HTMLAttr", [], HTMLAttr, () => [["DefaultChecked", [bool]], ["DefaultValue", [obj]], ["Accept", [string]], ["AcceptCharset", [string]], ["AccessKey", [string]], ["Action", [string]], ["AllowFullScreen", [bool]], ["AllowTransparency", [bool]], ["Alt", [string]], ["aria-controls", [string]], ["aria-expanded", [bool]], ["aria-haspopup", [bool]], ["aria-pressed", [bool]], ["Async", [bool]], ["AutoComplete", [string]], ["AutoFocus", [bool]], ["AutoPlay", [bool]], ["Capture", [bool]], ["CellPadding", [obj]], ["CellSpacing", [obj]], ["CharSet", [string]], ["Challenge", [string]], ["Checked", [bool]], ["ClassID", [string]], ["ClassName", [string]], ["className", [string]], ["Cols", [int32]], ["ColSpan", [int32]], ["Content", [string]], ["ContentEditable", [bool]], ["ContextMenu", [string]], ["Controls", [bool]], ["Coords", [string]], ["CrossOrigin", [string]], ["data-toggle", [string]], ["DateTime", [string]], ["Default", [bool]], ["Defer", [bool]], ["Dir", [string]], ["Disabled", [bool]], ["Download", [obj]], ["Draggable", [bool]], ["EncType", [string]], ["Form", [string]], ["FormAction", [string]], ["FormEncType", [string]], ["FormMethod", [string]], ["FormNoValidate", [bool]], ["FormTarget", [string]], ["FrameBorder", [obj]], ["Headers", [string]], ["Height", [obj]], ["Hidden", [bool]], ["High", [float64]], ["Href", [string]], ["HrefLang", [string]], ["HtmlFor", [string]], ["HttpEquiv", [string]], ["Icon", [string]], ["Id", [string]], ["InputMode", [string]], ["Integrity", [string]], ["Is", [string]], ["KeyParams", [string]], ["KeyType", [string]], ["Kind", [string]], ["Label", [string]], ["Lang", [string]], ["List", [string]], ["Loop", [bool]], ["Low", [float64]], ["Manifest", [string]], ["MarginHeight", [float64]], ["MarginWidth", [float64]], ["Max", [obj]], ["MaxLength", [float64]], ["Media", [string]], ["MediaGroup", [string]], ["Method", [string]], ["Min", [obj]], ["MinLength", [float64]], ["Multiple", [bool]], ["Muted", [bool]], ["Name", [string]], ["NoValidate", [bool]], ["Open", [bool]], ["Optimum", [float64]], ["Pattern", [string]], ["Placeholder", [string]], ["Poster", [string]], ["Preload", [string]], ["RadioGroup", [string]], ["ReadOnly", [bool]], ["Rel", [string]], ["Required", [bool]], ["Role", [string]], ["Rows", [int32]], ["RowSpan", [int32]], ["Sandbox", [string]], ["Scope", [string]], ["Scoped", [bool]], ["Scrolling", [string]], ["Seamless", [bool]], ["Selected", [bool]], ["Shape", [string]], ["Size", [float64]], ["Sizes", [string]], ["Span", [float64]], ["SpellCheck", [bool]], ["Src", [string]], ["SrcDoc", [string]], ["SrcLang", [string]], ["SrcSet", [string]], ["Start", [float64]], ["Step", [obj]], ["Summary", [string]], ["TabIndex", [int32]], ["Target", [string]], ["Title", [string]], ["Type", [string]], ["UseMap", [string]], ["Value", [obj]], ["value", [array(string)]], ["Width", [obj]], ["Wmode", [string]], ["Wrap", [string]], ["About", [string]], ["Datatype", [string]], ["Inlist", [obj]], ["Prefix", [string]], ["Property", [string]], ["Resource", [string]], ["Typeof", [string]], ["Vocab", [string]], ["AutoCapitalize", [string]], ["AutoCorrect", [string]], ["AutoSave", [string]], ["ItemProp", [string]], ["ItemScope", [bool]], ["ItemType", [string]], ["ItemID", [string]], ["ItemRef", [string]], ["Results", [float64]], ["Security", [string]], ["Unselectable", [bool]], ["Custom", [string, obj]]]);
}
export const CSSProp = declare(function Fable_React_Props_CSSProp(tag, name, ...fields) {
  Union.call(this, tag, name, ...fields);
}, Union);
export function CSSProp$reflection() {
  return union("Fable.React.Props.CSSProp", [], CSSProp, () => [["AlignContent", [string]], ["AlignItems", [string]], ["AlignSelf", [string]], ["AlignmentAdjust", [obj]], ["AlignmentBaseline", [obj]], ["All", [obj]], ["Animation", [obj]], ["AnimationDelay", [obj]], ["AnimationDirection", [obj]], ["AnimationDuration", [obj]], ["AnimationFillMode", [obj]], ["AnimationIterationCount", [obj]], ["AnimationName", [obj]], ["AnimationPlayState", [obj]], ["AnimationTimingFunction", [obj]], ["Appearance", [obj]], ["BackfaceVisibility", [obj]], ["Background", [obj]], ["BackgroundAttachment", [obj]], ["BackgroundBlendMode", [obj]], ["BackgroundClip", [obj]], ["BackgroundColor", [obj]], ["BackgroundComposite", [obj]], ["BackgroundImage", [obj]], ["BackgroundOrigin", [obj]], ["BackgroundPosition", [obj]], ["BackgroundPositionX", [obj]], ["BackgroundPositionY", [obj]], ["BackgroundRepeat", [obj]], ["BackgroundSize", [obj]], ["BaselineShift", [obj]], ["Behavior", [obj]], ["BlockSize", [obj]], ["Border", [obj]], ["BorderBlockEnd", [obj]], ["BorderBlockEndColor", [obj]], ["BorderBlockEndStyle", [obj]], ["BorderBlockEndWidth", [obj]], ["BorderBlockStart", [obj]], ["BorderBlockStartColor", [obj]], ["BorderBlockStartStyle", [obj]], ["BorderBlockStartWidth", [obj]], ["BorderBottom", [obj]], ["BorderBottomColor", [obj]], ["BorderBottomLeftRadius", [obj]], ["BorderBottomRightRadius", [obj]], ["BorderBottomStyle", [obj]], ["BorderBottomWidth", [obj]], ["BorderCollapse", [obj]], ["BorderColor", [obj]], ["BorderCornerShape", [obj]], ["BorderImage", [obj]], ["BorderImageOutset", [obj]], ["BorderImageRepeat", [obj]], ["BorderImageSlice", [obj]], ["BorderImageSource", [obj]], ["BorderImageWidth", [obj]], ["BorderInlineEnd", [obj]], ["BorderInlineEndColor", [obj]], ["BorderInlineEndStyle", [obj]], ["BorderInlineEndWidth", [obj]], ["BorderInlineStart", [obj]], ["BorderInlineStartColor", [obj]], ["BorderInlineStartStyle", [obj]], ["BorderInlineStartWidth", [obj]], ["BorderLeft", [obj]], ["BorderLeftColor", [obj]], ["BorderLeftStyle", [obj]], ["BorderLeftWidth", [obj]], ["BorderRadius", [obj]], ["BorderRight", [obj]], ["BorderRightColor", [obj]], ["BorderRightStyle", [obj]], ["BorderRightWidth", [obj]], ["BorderSpacing", [obj]], ["BorderStyle", [obj]], ["BorderTop", [obj]], ["BorderTopColor", [obj]], ["BorderTopLeftRadius", [obj]], ["BorderTopRightRadius", [obj]], ["BorderTopStyle", [obj]], ["BorderTopWidth", [obj]], ["BorderWidth", [obj]], ["Bottom", [obj]], ["BoxAlign", [obj]], ["BoxDecorationBreak", [obj]], ["BoxDirection", [obj]], ["BoxFlex", [obj]], ["BoxFlexGroup", [obj]], ["BoxLineProgression", [obj]], ["BoxLines", [obj]], ["BoxOrdinalGroup", [obj]], ["BoxShadow", [obj]], ["BoxSizing", [obj]], ["BreakAfter", [obj]], ["BreakBefore", [obj]], ["BreakInside", [obj]], ["CaptionSide", [obj]], ["CaretColor", [obj]], ["Clear", [obj]], ["Clip", [obj]], ["ClipPath", [obj]], ["ClipRule", [obj]], ["Color", [obj]], ["ColorInterpolation", [obj]], ["ColorInterpolationFilters", [obj]], ["ColorProfile", [obj]], ["ColorRendering", [obj]], ["ColumnCount", [obj]], ["ColumnFill", [obj]], ["ColumnGap", [obj]], ["ColumnRule", [obj]], ["ColumnRuleColor", [obj]], ["ColumnRuleStyle", [obj]], ["ColumnRuleWidth", [obj]], ["ColumnSpan", [obj]], ["ColumnWidth", [obj]], ["Columns", [obj]], ["Content", [obj]], ["CounterIncrement", [obj]], ["CounterReset", [obj]], ["Cue", [obj]], ["CueAfter", [obj]], ["Cursor", [obj]], ["Direction", [obj]], ["Display", [string]], ["DominantBaseline", [obj]], ["EmptyCells", [obj]], ["EnableBackground", [obj]], ["Fill", [obj]], ["FillOpacity", [obj]], ["FillRule", [obj]], ["Filter", [obj]], ["Flex", [obj]], ["FlexAlign", [obj]], ["FlexBasis", [obj]], ["FlexDirection", [obj]], ["FlexFlow", [obj]], ["FlexGrow", [obj]], ["FlexItemAlign", [obj]], ["FlexLinePack", [obj]], ["FlexOrder", [obj]], ["FlexShrink", [obj]], ["FlexWrap", [obj]], ["Float", [obj]], ["FloodColor", [obj]], ["FloodOpacity", [obj]], ["FlowFrom", [obj]], ["Font", [obj]], ["FontFamily", [obj]], ["FontFeatureSettings", [obj]], ["FontKerning", [obj]], ["FontLanguageOverride", [obj]], ["FontSize", [obj]], ["FontSizeAdjust", [obj]], ["FontStretch", [obj]], ["FontStyle", [obj]], ["FontSynthesis", [obj]], ["FontVariant", [obj]], ["FontVariantAlternates", [obj]], ["FontVariantCaps", [obj]], ["FontVariantEastAsian", [obj]], ["FontVariantLigatures", [obj]], ["FontVariantNumeric", [obj]], ["FontVariantPosition", [obj]], ["FontWeight", [obj]], ["GlyphOrientationHorizontal", [obj]], ["GlyphOrientationVertical", [obj]], ["Grid", [obj]], ["GridArea", [obj]], ["GridAutoColumns", [obj]], ["GridAutoFlow", [obj]], ["GridAutoRows", [obj]], ["GridColumn", [obj]], ["GridColumnEnd", [obj]], ["GridColumnGap", [obj]], ["GridColumnStart", [obj]], ["GridGap", [obj]], ["GridRow", [obj]], ["GridRowEnd", [obj]], ["GridRowGap", [obj]], ["GridRowPosition", [obj]], ["GridRowSpan", [obj]], ["GridRowStart", [obj]], ["GridTemplate", [obj]], ["GridTemplateAreas", [obj]], ["GridTemplateColumns", [obj]], ["GridTemplateRows", [obj]], ["HangingPunctuation", [obj]], ["Height", [obj]], ["HyphenateLimitChars", [obj]], ["HyphenateLimitLines", [obj]], ["HyphenateLimitZone", [obj]], ["Hyphens", [obj]], ["ImageOrientation", [obj]], ["ImageRendering", [obj]], ["ImageResolution", [obj]], ["ImeMode", [obj]], ["InlineSize", [obj]], ["Isolation", [obj]], ["JustifyContent", [obj]], ["Kerning", [obj]], ["LayoutGrid", [obj]], ["LayoutGridChar", [obj]], ["LayoutGridLine", [obj]], ["LayoutGridMode", [obj]], ["LayoutGridType", [obj]], ["Left", [obj]], ["LetterSpacing", [obj]], ["LightingColor", [obj]], ["LineBreak", [obj]], ["LineClamp", [obj]], ["LineHeight", [obj]], ["ListStyle", [obj]], ["ListStyleImage", [obj]], ["ListStylePosition", [obj]], ["ListStyleType", [obj]], ["Margin", [obj]], ["MarginBlockEnd", [obj]], ["MarginBlockStart", [obj]], ["MarginBottom", [obj]], ["MarginInlineEnd", [obj]], ["MarginInlineStart", [obj]], ["MarginLeft", [obj]], ["MarginRight", [obj]], ["MarginTop", [obj]], ["MarkerEnd", [obj]], ["MarkerMid", [obj]], ["MarkerStart", [obj]], ["MarqueeDirection", [obj]], ["MarqueeStyle", [obj]], ["Mask", [obj]], ["MaskBorder", [obj]], ["MaskBorderRepeat", [obj]], ["MaskBorderSlice", [obj]], ["MaskBorderSource", [obj]], ["MaskBorderWidth", [obj]], ["MaskClip", [obj]], ["MaskComposite", [obj]], ["MaskImage", [obj]], ["MaskMode", [obj]], ["MaskOrigin", [obj]], ["MaskPosition", [obj]], ["MaskRepeat", [obj]], ["MaskSize", [obj]], ["MaskType", [obj]], ["MaxFontSize", [obj]], ["MaxHeight", [obj]], ["MaxWidth", [obj]], ["MinBlockSize", [obj]], ["MinHeight", [obj]], ["MinInlineSize", [obj]], ["MinWidth", [obj]], ["MixBlendMode", [obj]], ["ObjectFit", [obj]], ["ObjectPosition", [obj]], ["OffsetBlockEnd", [obj]], ["OffsetBlockStart", [obj]], ["OffsetInlineEnd", [obj]], ["OffsetInlineStart", [obj]], ["Opacity", [obj]], ["Order", [obj]], ["Orphans", [obj]], ["Outline", [obj]], ["OutlineColor", [obj]], ["OutlineOffset", [obj]], ["OutlineStyle", [obj]], ["OutlineWidth", [obj]], ["Overflow", [obj]], ["OverflowStyle", [obj]], ["OverflowWrap", [obj]], ["OverflowX", [obj]], ["OverflowY", [obj]], ["Padding", [obj]], ["PaddingBlockEnd", [obj]], ["PaddingBlockStart", [obj]], ["PaddingBottom", [obj]], ["PaddingInlineEnd", [obj]], ["PaddingInlineStart", [obj]], ["PaddingLeft", [obj]], ["PaddingRight", [obj]], ["PaddingTop", [obj]], ["PageBreakAfter", [obj]], ["PageBreakBefore", [obj]], ["PageBreakInside", [obj]], ["Pause", [obj]], ["PauseAfter", [obj]], ["PauseBefore", [obj]], ["Perspective", [obj]], ["PerspectiveOrigin", [obj]], ["PointerEvents", [obj]], ["Position", [string]], ["PunctuationTrim", [obj]], ["Quotes", [obj]], ["RegionFragment", [obj]], ["Resize", [obj]], ["RestAfter", [obj]], ["RestBefore", [obj]], ["Right", [obj]], ["RubyAlign", [obj]], ["RubyMerge", [obj]], ["RubyPosition", [obj]], ["ScrollBehavior", [obj]], ["ScrollSnapCoordinate", [obj]], ["ScrollSnapDestination", [obj]], ["ScrollSnapType", [obj]], ["ShapeImageThreshold", [obj]], ["ShapeInside", [obj]], ["ShapeMargin", [obj]], ["ShapeOutside", [obj]], ["ShapeRendering", [obj]], ["Speak", [obj]], ["SpeakAs", [obj]], ["StopColor", [obj]], ["StopOpacity", [obj]], ["Stroke", [obj]], ["StrokeDasharray", [obj]], ["StrokeDashoffset", [obj]], ["StrokeLinecap", [obj]], ["StrokeLinejoin", [obj]], ["StrokeMiterlimit", [obj]], ["StrokeOpacity", [obj]], ["StrokeWidth", [obj]], ["TabSize", [obj]], ["TableLayout", [obj]], ["TextAlign", [string]], ["TextAlignLast", [obj]], ["TextAnchor", [obj]], ["TextCombineUpright", [obj]], ["TextDecoration", [obj]], ["TextDecorationColor", [obj]], ["TextDecorationLine", [obj]], ["TextDecorationLineThrough", [obj]], ["TextDecorationNone", [obj]], ["TextDecorationOverline", [obj]], ["TextDecorationSkip", [obj]], ["TextDecorationStyle", [obj]], ["TextDecorationUnderline", [obj]], ["TextEmphasis", [obj]], ["TextEmphasisColor", [obj]], ["TextEmphasisPosition", [obj]], ["TextEmphasisStyle", [obj]], ["TextHeight", [obj]], ["TextIndent", [obj]], ["TextJustify", [obj]], ["TextJustifyTrim", [obj]], ["TextKashidaSpace", [obj]], ["TextLineThrough", [obj]], ["TextLineThroughColor", [obj]], ["TextLineThroughMode", [obj]], ["TextLineThroughStyle", [obj]], ["TextLineThroughWidth", [obj]], ["TextOrientation", [obj]], ["TextOverflow", [obj]], ["TextOverline", [obj]], ["TextOverlineColor", [obj]], ["TextOverlineMode", [obj]], ["TextOverlineStyle", [obj]], ["TextOverlineWidth", [obj]], ["TextRendering", [obj]], ["TextScript", [obj]], ["TextShadow", [obj]], ["TextTransform", [obj]], ["TextUnderlinePosition", [obj]], ["TextUnderlineStyle", [obj]], ["Top", [obj]], ["TouchAction", [obj]], ["Transform", [obj]], ["TransformBox", [obj]], ["TransformOrigin", [obj]], ["TransformOriginZ", [obj]], ["TransformStyle", [obj]], ["Transition", [obj]], ["TransitionDelay", [obj]], ["TransitionDuration", [obj]], ["TransitionProperty", [obj]], ["TransitionTimingFunction", [obj]], ["UnicodeBidi", [obj]], ["UnicodeRange", [obj]], ["UserFocus", [obj]], ["UserInput", [obj]], ["VerticalAlign", [obj]], ["Visibility", [obj]], ["VoiceBalance", [obj]], ["VoiceDuration", [obj]], ["VoiceFamily", [obj]], ["VoicePitch", [obj]], ["VoiceRange", [obj]], ["VoiceRate", [obj]], ["VoiceStress", [obj]], ["VoiceVolume", [obj]], ["WhiteSpace", [obj]], ["WhiteSpaceTreatment", [obj]], ["Widows", [obj]], ["Width", [obj]], ["WillChange", [obj]], ["WordBreak", [obj]], ["WordSpacing", [obj]], ["WordWrap", [obj]], ["WrapFlow", [obj]], ["WrapMargin", [obj]], ["WrapOption", [obj]], ["WritingMode", [obj]], ["ZIndex", [obj]], ["Zoom", [obj]], ["Custom", [string, obj]]]);
}
export function Style(css) {
  return ["style", createObj(css, 1)];
}
export function Data(key, value) {
  return ["data-" + key, value];
}
